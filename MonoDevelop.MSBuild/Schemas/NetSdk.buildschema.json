{
  "license": "Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE file in the project root for full license information.",
  "properties": {
    "AssemblyTitle": "Description for the assembly manifest",
    "AssemblyVersion": "Numeric value of the version for the assembly manifest in the format major.minor.patch (e.g. 2.4.0)",
    "EnableDefaultItems": {
      "description": "Whether to include items in the project directory by wildcard",
      "type": "bool",
      "defaultValue": "true"
    },
    "EnableDefaultCompileItems": {
      "description": "Whether to include source files in the project directory by wildcard",
      "type": "bool",
      "defaultValue": "true"
    },
    "EnableDefaultEmbeddedResourceItems": {
      "description": "Whether to include embedded resources in the project directory by wildcard",
      "type": "bool",
      "defaultValue": "true"
    },
    "EnableDefaultNoneItems": {
      "description": "Whether to include none items in the project directory by wildcard",
      "type": "bool",
      "defaultValue": "true"
    },
    "EnableDefaultContentItems": {
      "description": "Set to true to automatically include certain file types, such as .cshtml files, as content in the project. When referenced via Microsoft.NET.Sdk.Web, this additionally includes all files under wwwroot, and any config files.",
      "type": "bool"
    },
    "DefaultItemExcludes": {
      "description": "Files to omit from wildcard item includes",
      "type": "file",
      "isList": true
    },
    "DisableImplicitFrameworkReferences": {
      "description": "Disable implicit inclusion of framework references",
      "type": "bool",
      "defaultValue": "false"
    },
    "SetLinkMetadataAutomatically": {
      "description": "Whether to automatically set Link metadata on items outside the project folder",
      "type": "bool",
      "defaultValue": "true"
    },
    "AppendTargetFrameworkToOutputPath": {
      "description": "Whether the framework's short name is added to the output path, which prevents conflicts when multi-targeting",
      "type": "bool",
      "defaultValue": "true"
    },
    "AppendRuntimeIdentifierToOutputPath": {
      "description": "Whether the runtime identifier is added to the output path, which prevents conflicts when building for multiple RIDs",
      "type": "bool",
      "defaultValue": "true"
    },
    "AppendPlatformToOutputPath": {
      "description": "Whether the `PlatformName` is added to the output path",
      "type": "bool",
      "defaultValue": "true"
    },
    "UseWindowsForms": {
      "description": "Whether or not the project references Windows Forms",
      "type": "bool",
      "defaultValue": "false"
    },
    "UseWPF": {
      "description": "Whether or not the project references Windows Presentation Foundation",
      "type": "bool",
      "defaultValue": "false"
    },
    "UseMaui": {
      "description": "Whether or not the project references .NET Multi-platform App UI (.NET MAUI)",
      "type": "bool",
      "defaultValue": "false"
    },
    "PublishReadyToRun": {
      "description": "Indicates whether the project should produce ReadyToRun images during publish.",
      "type": "bool",
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/deploying/ready-to-run"
    },
    "PublishAot": {
      "description": "Indicates whether the project should produce native ahead-of-time compiled images during publish.",
      "type": "bool",
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/deploying/native-aot#publish-native-aot-using-the-cli"
    },
    "PublishSingleFile": {
      "description": "Indicates whether the project should bundle all application-dependent files into a single binary during publish.",
      "type": "bool",
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/deploying/single-file/overview#publish-a-single-file-app"
    },
    "IsAotCompatible": {
      "description": "Indicates whether a class library is compatible with native AOT. Setting to true will enable analyzers to help ensure the assembly is compatible with AOT by setting `IsTrimmable`, `EnableTrimAnalyzer`, `EnableSingleFileAnalyzer`, and `EnableAotAnalyzer` to true.",
      "type": "bool",
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/deploying/native-aot#aot-compatibility-analyzers"
    },
    "DisableTransitiveProjectReferences": {
      "description": "When true, do not discover ProjectReference items representing projects referenced by this project's ProjectReferences. Applies only to projects using the .NET SDK.",
      "type": "bool"
    },
    "EnableNETAnalyzers": {
      "description": "Indicates whether the .NET analyzers are enabled. They are enabled by default for projects that target .NET 5.0 or later.",
      "type": "bool"
    },
    "RunAnalyzers": {
      "description": "Disables analyzers at both build and design time. This property takes precedence over RunAnalyzersDuringBuild and RunAnalyzersDuringLiveAnalysis. Default is true.",
      "type": "bool"
    },
    "RunAnalyzersDuringBuild": {
      "description": "Controls whether analyzers run at build time. Default is true.",
      "type": "bool"
    },
    "RunAnalyzersDuringLiveAnalysis": {
      "description": "Controls whether analyzers analyze code live at design time. Default is true.",
      "type": "bool"
    },
    "EnforceCodeStyleInBuild": {
      "description": "Controls whether code style analysis rules configured as warnings or errors should execute on build and report violations. The default is false.",
      "type": "bool"
    },
    "AnalysisMode": {
      "description": "Customizes the set of rules that are enabled by default.",
      "type": [
        "none",
        "default",
        "minimum",
        "recommended",
        "all"
      ]
    },
    "AnalysisLevel": {
      "description": "Customizes the set of rules that are enabled by default.",
      "type": [
        "none",
        "latest",
        "latest-minimum",
        "latest-recommended",
        "latest-all",
        "preview",
        "preview-minimum",
        "preview-recommended",
        "preview-all",
        "5.0",
        "5.0-minimum",
        "5.0-recommended",
        "5.0-all",
        "6.0",
        "6.0-minimum",
        "6.0-recommended",
        "7.0-all",
        "7.0",
        "7.0-minimum",
        "7.0-recommended",
        "7.0-all",
        "8.0",
        "8.0-minimum",
        "8.0-recommended",
        "8.0-all",
        "9.0",
        "9.0-minimum",
        "9.0-recommended",
        "9.0-all"
      ],
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-options/errors-warnings#analysis-level"
    },
    "GenerateDocumentationFile": {
      "description": "Value indicating whether a documentation file will be generated by the compiler",
      "type": "bool"
    },
    "CopyDebugSymbolFilesFromPackages": {
      "description": "Value indicating whether symbol files will be copied from NuGet packages by the compiler",
      "type": "bool"
    },
    "CopyDocumentationFilesFromPackages": {
      "description": "Value indicating whether documentation files will be copied from NuGet packages by the compiler",
      "type": "bool"
    },
    "SatelliteResourceLanguages": {
      "description": "Semi-colon separated list of culture names to preserve satellite resource assemblies during build and publish. If left empty, all satellite resource assemblies will be preserved.",
      "type": "culture",
      "isList": true,
      "defaultValue": ""
    },
    "UseArtifactsOutput": {
      "description": "Indicates whether the project should use the `artifacts` output directory for intermediate and output files.",
      "type": "bool",
      "defaultValue": "false"
    },
    // TODO: path component type
    "ArtifactsProjectName": {
      "description": "The name to use for the project in the artifacts directory when `UseArtifactsOutput` is true.",
      "type": "string",
      "defaultValue": "$(MSBuildProjectName)"
    },
    "ArtifactsBinOutputName": {
      "description": "The name of the output directory for intermediate and output files when `UseArtifactsOutput` is true.",
      "type": "string",
      "defaultValue": "bin"
    },
    "ArtifactsPublishOutputName": {
      "description": "The name of the output directory for publish output files when `UseArtifactsOutput` is true.",
      "type": "string",
      "defaultValue": "publish"
    },
    "ArtifactsPackageOutputName": {
      "description": "The name of the output directory for package output files when `UseArtifactsOutput` is true.",
      "type": "string",
      "defaultValue": "packages"
    },
    "ArtifactsPivots": {
      "description": "An ID composed of the build pivots (e.g. `Configuration`, `TargetFramework`) to use as a subdirectory for artifacts when `UseArtifactsOutput` is true."
    },
    "IncludeProjectNameInArtifactsPaths": {
      "description": "Indicates whether the project name should be included in the artifacts paths when `UseArtifactsOutput` is true.",
      "type": "bool",
      "defaultValue": "false"
    },
    "UseArtifactsIntermediateOutput": {
      "description": "Indicates whether the project should use the `artifacts` output directory for intermediate files when `UseArtifactsOutput` is true.",
      "type": "bool",
      "defaultValue": "true"
    },
    "JsonSerializerIsReflectionEnabledByDefault": {
      "description": "Whether to disable reflection-based serialization in System.Text.Json by default.",
      "type": "bool",
      "defaultValue": "false"
    },
    "EnableConfigurationBindingGenerator": {
      "description": "Whether to enable the AOT/trim-friendly `Microsoft.Extensions.Configuration` configuration binding generator. On by default for AOT'd web apps.",
      "type": "bool",
      "defaultValue": "false"
    },
    "StripSymbols": {
      "description": "When using AOT, whether to put native debug symbols in a separate file instead of including them in the natiuve binary.",
      "type": "bool",
      "defaultValue": "true", // false on .net 7, true on 8
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/deploying/native-aot#native-debug-information"
    },
    "PublishRelease": {
      "description": "Whether to use `Release` assets by default when publishing the project.",
      "type": "bool",
      "defaultValue": "true"
    },
    "NetStandardImplicitPackageVersion": {
      "description": "Override the version of the implicit `NETStandard.Library` package reference used when targeting `netstandard1.x`.",
      "type": "version-suffixed",
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/project-sdk/msbuild-props#netstandardimplicitpackageversion"
    },
    "CopyLocalLockFileAssemblies": {
      "description": "Whether to copy assemblies from the lock file to the output directory.",
      "type": "bool",
      "defaultValue": "false",
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/project-sdk/msbuild-props#copylocallockfileassemblies"
    },
    "ApiCompatStrictMode": {
      "description": "Whether to enable strict mode for API compatibility checks.",
      "type": "bool",
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/project-sdk/msbuild-props#apicompatstrictmode"
    },
    "ApiCompatValidateAssemblies": {
      "description": "Whether to validate assemblies for API compatibility.",
      "type": "bool",
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/project-sdk/msbuild-props#apicompatvalidateassemblies"
    },
    "TieredPGO": {
      "description": "Whether to enable tiered profile-guided optimization.",
      "type": "bool",
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/compilation#profile-guided-optimization"
    },
    "TieredCompilation": {
      "description": "Indicates whether the runtime should enable tiered JIT compilation.",
      "type": "bool",
      "defaultValue": "true", // on .net core 3.0+
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/compilation#tiered-compilation"
    },
    "TieredCompilationQuickJit": {
      "description": "Whether the JIT compiler should use quick JIT for methods that don't contain loops and don't have precompiled code.",
      "type": "bool",
      "defaultValue": "true", // on .net core 3.0+
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/compilation#quick-jit"
    },
    "TieredCompilationQuickJitForLoops": {
      "description": "Whether the JIT compiler should use quick JIT for methods that contain loops.",
      "type": "bool",
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/compilation#quick-jit-for-loops"
    },
    "DebuggerSupport": {
      "description": "Indicates whether the app supports debugging. When this is `false`, the trimmer is able to remove code that enhances the debugging experience.",
      "type": "bool",
      "defaultValue": "true"
    },
    "ServerGarbageCollection": {
      "description": "Indicates whether the runtime should enable the server garbage collection mode.",
      "type": "bool"
    },
    "ConcurrentGarbageCollection": {
      "description": "Indicates whether the runtime should enable concurrent (background) garbage collection.",
      "type": "bool",
      "defaultValue": "true", //since .NET Core 1.0
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#background-gc"
    },
    "RetainVMGarbageCollection": {
      "description": "Indicates whether the runtime should retain deleted segments for future use after garbage collection or release them back to the OS.",
      "type": "bool",
      "defaultValue": "false",
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#retain-vm"
    },
    "GarbageCollectionAdaptationMode": {
      "description": "Configures the garbage collector to dynamically adapt to the application's memory size (DATAS)",
      "type": [ "0", "1" ],
      "helpUrl": "https://maoni0.medium.com/dynamically-adapting-to-application-sizes-2d72fcb6f1ea"
    },
    "InvariantGlobalization": {
      "description": "Indicates whether an app runs in globalization-invariant mode without access to culture-specific data and behavior.",
      "type": "bool"
    },
    "PredefinedCulturesOnly": {
      "description": "Configures whether apps can create cultures other than the invariant culture when globalization-invariant mode is enabled.",
      "type": "bool",
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/globalization#predefined-cultures"
    },
    "ThreadPoolMinThreads": {
      "description": "Specifies the minimum number of threads for the worker thread pool. Equivalent to `ThreadPoolMinThreads` MSBuild property. Value: integer.",
      "type": "int",
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/threading#minimum-threads"
    },
    "ThreadPoolMaxThreads": {
      "description": "Specifies the maximum number of threads for the worker thread pool. Equivalent to `ThreadPoolMaxThreads` MSBuild property. Value: integer.",
      "type": "int",
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/threading#maximum-threads"
    },
    "UseWindowsThreadPool": {
      "description": "For projects on Windows, configures whether thread pool thread management is delegated to the Windows thread pool.",
      "type": "bool",
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/threading#windows-thread-pool"
    },
    "RollForward": {
      "description": "For framework-dependent apps, controls whether the app can run on a newer .NET shared runtime than the version for which it was built.",
      "type": { "$ref": "#/types/rollForwardPolicy" },
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/versions/selection#framework-dependent-apps-roll-forward"
    },
    "RuntimeFrameworkVersion": {
      "description": "For self-contained apps, overrides the minimum runtime version to use when building the app.",
      "type": "version",
      "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/versions/selection#self-contained-deployments-include-the-selected-runtime"
    },
  },

  "items": {
    "InternalsVisibleTo": {
      "description": "Specifies that internal types and members are visible to the specified friend assemblies.",
      "includeDescription": "The name of the friend assembly to make internal types and members visible to.",
      "metadata": {
        "Key": "Optional public key associated with the strong name signature of the friend assembly."
      }
    },
    "FrameworkReference": {
      "description": "Reference to a shared framework.",
      "metadata": {
        "IsTrimmable": {
          "description": "Controls whether the runtime assets of this shared framework can be trimmed by the IL Linker (if PublishTrimmed is true).",
          "type": "string"
        },
        "TargetLatestRuntimePatch": {
          "description": "Controls whether the app will target the latest patch of the runtime.  Defaults to true for self-contained apps, false otherwise.",
          "type": "string"
        }
      }
    },
    "RuntimeHostConfigurationOption": {
      "description": "A configuration option for the `runtimeconfig.json`.",
      "includeDescription": "A runtime configuration option.",
      "type": { "$ref": "#/types/runtimeConfigurationOption" },
      "metadata": {
        "Value": {
          "description": "The value of the configuration option.",
          "isRequired": true
        },
        "Trim": {
          "type": "bool",
          "description": "Whether the configuration option affects trimming and should be passed to the trimmer."
        }
      }
    },
    "SupportedPlatform": {
      "description": "Platforms supported by the project for analyzer warnings.",
      "includeDescription": "Name of a platform supported by the project for analyzer warnings.",
      "type": { "$ref": "#/types/supportedPlatform" }
    }
  },
  "types": {
    "supportedPlatform": {
      "allowUnknownValues": true,
      "values": {
        "macOS": "macOS",
        "Windows": "Windows",
        "Linux": "Linux"
      }
    },
    // based on https://github.com/dotnet/docs/blob/main/docs/core/runtime-config/compilation.md
    // based on https://github.com/dotnet/docs/blob/main/docs/core/runtime-config/garbage-collector.md
    // based on https://github.com/dotnet/docs/blob/main/docs/core/runtime-config/globalization.md
    // based on https://github.com/dotnet/docs/blob/main/docs/core/runtime-config/networking.md
    // based on https://github.com/dotnet/docs/blob/main/docs/core/runtime-config/threading.md
    // based on https://github.com/dotnet/docs/blob/main/docs/core/runtime-config/wpf.md
    // see also RuntimeHostConfigurationOption items in https://github.com/dotnet/sdk/blob/main/src/Tasks/Microsoft.NET.Build.Tasks/targets/Microsoft.NET.Sdk.targets
    "runtimeConfigurationOption": {
      "allowUnknownValues": true,
      "values": {
        "System.Runtime.TieredCompilation": {
          "description": "Whether the JIT uses tiered compilation. Equivalent to `TieredCompilation` MSBuild property. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/compilation#tiered-compilation"
        },
        "System.Runtime.TieredCompilation.QuickJit": {
          "description": "Whether the JIT compiler uses quick JIT. Equivalent to `TieredCompilationQuickJit` MSBuild property. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/compilation#quick-jit"
        },
        "System.Runtime.TieredCompilation.QuickJitForLoops": {
          "description": "Whether the JIT uses quick JIT for methods that don't contain loops. Equivalent to `TieredCompilationQuickJitForLoops` MSBuild property. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/compilation#quick-jit-for-loops"
        },
        "System.Diagnostics.Debugger.IsSupported": {
          "description": "Whether the app supports debugging. Equivalent to `DebuggerSupport` MSBuild property. Value: true or false."
        },
        "System.GC.Server": {
          "description": "Whether the runtime should enable the server garbage collection mode. Equivalent to `ServerGarbageCollection` MSBuild property. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#workstation-vs-server"
        },
        "System.GC.Concurrent": {
          "description": "Whether the runtime should enable concurrent (background) garbage collection. Equivalent to `ConcurrentGarbageCollection` MSBuild property. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#background-gc"
        },
        "System.GC.HeapCount": {
          "description": "Limit the number of heaps created by the garbage collector. Value: decimal.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#heap-count"
        },
        "System.GC.HeapAffinitizeMask": {
          "description": "Specify the exact processors that garbage collection should use. Value: bit mask in decimal form.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#affinitize-mask"
        },
        "System.GC.HeapAffinitizeRanges": {
          "description": "Specifies the list of processors to use for garbage collector threads. Value: comma-separated list of processor numbers or ranges of processor numbers.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#affinitize-ranges"
        },
        "System.GC.CpuGroup": {
          "description": "Configures whether the garbage collector uses CPU groups or not. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#cpu-groups"
        },
        "System.GC.NoAffinitize": {
          "description": "Specifies whether to affinitize garbage collection threads with processors. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#affinitize"
        },
        "System.GC.HeapHardLimit": {
          "description": "Specifies the maximum commit size, in bytes, for the GC heap and GC bookkeeping. Value: decimal.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#heap-limit"
        },
        "System.GC.HeapHardLimitPercent": {
          "description": "Specifies the allowable GC heap usage as a percentage of the total physical memory. Value: decimal.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#heap-limit-percent"
        },
        "System.GC.HeapHardLimitSOH": {
          "description": "Specify the GC's allowable heap usage for the small object heap (SOH). Value: decimal.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#per-object-heap-limits"
        },
        "System.GC.HeapHardLimitLOH": {
          "description": "Specify the GC's allowable heap usage for the large object heap (LOH). Value: decimal.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#per-object-heap-limits"
        },
        "System.GC.HeapHardLimitPOH": {
          "description": "Specify the GC's allowable heap usage for the pinned object heap (POH). Value: decimal.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#per-object-heap-limits"
        },
        "System.GC.System.GC.HeapHardLimitSOHPercent": {
          "description": "Specify the GC's allowable heap usage for the small object heap (SOH) as a percentage of total physical memory. Value: decimal.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#per-object-heap-limit-percents"
        },
        "System.GC.System.GC.HeapHardLimitLOHPercent": {
          "description": "Specify the GC's allowable heap usage for the large object heap (LOH) as a percentage of total physical memory. Value: decimal.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#per-object-heap-limit-percents"
        },
        "System.GC.System.GC.HeapHardLimitPOHPercent": {
          "description": "Specify the GC's allowable heap usage for the pinned object heap (POH) as a percentage of total physical memory. Value: decimal.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#per-object-heap-limit-percents"
        },
        "System.GC.HighMemoryPercent": {
          "description": "Set the percentage use of high physical memory that will trigger more aggressive collection. Value: decimal.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#high-memory-percent"
        },
        "System.GC.RetainVM": {
          "description": "Whether the runtime should retain deleted segments for future use after garbage collection. Equivalent to `RetainVMGarbageCollection` MSBuild property. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#retain-vm"
        },
        "System.GC.LOHThreshold": {
          "description": "Specifies the threshold size, in bytes, that causes objects to go on the large object heap (LOH). Value: decimal.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#large-object-heap-threshold"
        },
        "System.GC.ConserveMemory": {
          "description": "Configures the garbage collector to conserve memory at the expense of more frequent garbage collections and possibly longer pause times. Value: 0-9.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/garbage-collector#conserve-memory"
        },
        "System.GC.DynamicAdaptationMode": {
          "description": "Configures the garbage collector to dynamically adapt to the application's memory size (DATAS). Value: 0 or 1.",
          "helpUrl": "https://maoni0.medium.com/dynamically-adapting-to-application-sizes-2d72fcb6f1ea"
        },
        "System.Globalization.Invariant": {
          "description": "Whether the app runs in globalization-invariant mode without access to culture-specific data and behavior. Equivalent to `InvariantGlobalization` MSBuild property. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/globalization#invariant-mode"
        },
        "Switch.System.Globalization.EnforceJapaneseEraYearRanges": {
          "description": "Determines whether range checks for calendars that support multiple eras throw an exception when they overflow an era's date range. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/globalization#era-year-ranges"
        },
        "Switch.System.Globalization.EnforceLegacyJapaneseDateParsing": {
          "description": "Determines whether a Japanese date string that contains either \"1\" or \"Gannen\" as the year parses successfully or whether only \"1\" is supported. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/globalization#japanese-date-parsing"
        },
        "Switch.System.Globalization.FormatJapaneseFirstYearAsANumber": {
          "description": "Determines whether the first year of a Japanese calendar era is formatted as \"Gannen\" or as a number. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/globalization#japanese-year-format"
        },
        "System.Globalization.UseNls": {
          "description": "Determines whether .NET uses National Language Support (NLS) or International Components for Unicode (ICU) globalization APIs for Windows apps. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/globalization#nls"
        },
        "System.Globalization.PredefinedCulturesOnly": {
          "description": "Configures whether apps can create cultures other than the invariant culture when globalization-invariant mode is enabled. Equivalent to `PredefinedCulturesOnly` MSBuild property. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/globalization#predefined-cultures"
        },
        "System.Net.Http.SocketsHttpHandler.Http2Support": {
          "description": "Configures whether support for the HTTP/2 protocol is enabled. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/networking#http2-protocol"
        },
        "System.Net.Http.UsePortInSpn": {
          "description": "Impacts generation of service principal names (SPN) for Kerberos and NTLM authentication when `Host` header is missing and target is not running on default port. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/networking#spn-creation-in-httpclient-net-6-and-later"
        },
        "System.Net.Http.UseSocketsHttpHandler": {
          "description": "Configures whether System.Net.Http.HttpClientHandler uses System.Net.Http.SocketsHttpHandler or older HTTP protocol stacks. Affects .NET Core 2.1-3.1 only. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/networking#usesocketshttphandler-net-core-21-31-only"
        },
        "System.Net.Http.SocketsHttpHandler.AllowLatin1Headers": {
          "description": "This switch allows relaxing the HTTP header validation, enabling SocketsHttpHandler to send ISO-8859-1 (Latin-1) encoded characters in headers. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/networking#latin1-headers-net-core-31-only"
        },
        "System.Threading.ThreadPool.MinThreads": {
          "description": "Specifies the minimum number of threads for the worker thread pool. Equivalent to `ThreadPoolMinThreads` MSBuild property. Value: integer.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/threading#minimum-threads"
        },
        "System.Threading.ThreadPool.MaxThreads": {
          "description": "Specifies the maximum number of threads for the worker thread pool. Equivalent to `ThreadPoolMaxThreads` MSBuild property. Value: integer.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/threading#maximum-threads"
        },
        "System.Threading.ThreadPool.UseWindowsThreadPool": {
          "description": "For projects on Windows, configures whether thread pool thread management is delegated to the Windows thread pool. Equivalent to `UseWindowsThreadPool` MSBuild property. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/threading#windows-thread-pool"
        },
        "System.Threading.ThreadPool.Blocking.ThreadsToAddWithoutDelay_ProcCountFactor": {
          "description": "Configures how many additional threads per processor may be created without a delay. Value: integer.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/threading#thread-injection-in-response-to-blocking-work-items"
        },
        "System.Threading.ThreadPool.Blocking.ThreadsPerDelayStep_ProcCountFactor": {
          "description": "Configures how many threads can be created (per processor) each `DelayStepMs` interval, after `ThreadsToAddWithoutDelay` threads are created. Value: integer.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/threading#thread-injection-in-response-to-blocking-work-items"
        },
        "System.Threading.ThreadPool.Blocking.DelayStepMs": {
          "description": "Configures how much delay to add per `ThreadsPerDelayStep` threads after `ThreadsToAddWithoutDelay` threads are created. Value: integer.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/threading#thread-injection-in-response-to-blocking-work-items"
        },
        "System.Threading.ThreadPool.Blocking.MaxDelayMs": {
          "description": "After `ThreadsToAddWithoutDelay` threads are created, the maximum delay before creating a new thread. Value: integer.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/threading#thread-injection-in-response-to-blocking-work-items"
        },
        "System.Threading.ThreadPool.Blocking.IgnoreMemoryUsage": {
          "description": "Whether the threadpool should ignore heuristics that limit thread creation in low-memory situations. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/threading#thread-injection-in-response-to-blocking-work-items"
        },
        "Switch.System.Windows.Media.EnableHardwareAccelerationInRdp": {
          "description": "Configures whether hardware acceleration is used for WPF apps that are accessed through Remote Desktop Protocol (RDP).. Value: true or false.",
          "helpUrl": "https://learn.microsoft.com/en-us/dotnet/core/runtime-config/globalization#predefined-cultures"
        },
        "Microsoft.Extensions.DependencyInjection.VerifyOpenGenericServiceTrimmability": { "description": "Equivalent to `VerifyDependencyInjectionOpenGenericServiceTrimmability` MSBuild property" },
        "System.AggressiveAttributeTrimming": { "description": "Equivalent to `_AggressiveAttributeTrimming` MSBuild property" },
        "System.ComponentModel.TypeConverter.EnableUnsafeBinaryFormatterInDesigntimeLicenseContextSerialization": { "description": "Equivalent to `EnableUnsafeBinaryFormatterInDesigntimeLicenseContextSerialization` MSBuild property" },
        "System.Diagnostics.Metrics.Meter.IsSupported": { "description": "Equivalent to `MetricsSupport` MSBuild property" },
        "System.Diagnostics.Tracing.EventSource.IsSupported": { "description": "Equivalent to `EventSourceSupport` MSBuild property" },
        "System.Globalization.Hybrid": { "description": "Equivalent to `HybridGlobalization` MSBuild property" },
        "System.Net.Http.EnableActivityPropagation": { "description": "Equivalent to `HttpActivityPropagationSupport` MSBuild property" },
        "System.Net.Http.UseNativeHttpHandler": { "description": "Equivalent to `UseNativeHttpHandler` MSBuild property" },
        "System.Net.Security.UseManagedNtlm": { "description": "Equivalent to `_UseManagedNtlm` MSBuild property" },
        "System.Reflection.Metadata.MetadataUpdater.IsSupported": { "description": "Equivalent to `MetadataUpdaterSupport` MSBuild property" },
        "System.Reflection.NullabilityInfoContext.IsSupported": { "description": "Equivalent to `NullabilityInfoContextSupport` MSBuild property" },
        "System.Resources.ResourceManager.AllowCustomResourceTypes": { "description": "Equivalent to `CustomResourceTypesSupport` MSBuild property" },
        "System.Resources.UseSystemResourceKeys": { "description": "Equivalent to `UseSystemResourceKeys` MSBuild property" },
        "System.Runtime.CompilerServices.RuntimeFeature.IsDynamicCodeSupported": { "description": "Equivalent to `DynamicCodeSupport` MSBuild property" },
        "System.Runtime.InteropServices.BuiltInComInterop.IsSupported": { "description": "Equivalent to `BuiltInComInteropSupport` MSBuild property" },
        "System.Runtime.InteropServices.EnableConsumingManagedCodeFromNativeHosting": { "description": "Equivalent to `_EnableConsumingManagedCodeFromNativeHosting` MSBuild property" },
        "System.Runtime.InteropServices.EnableCppCLIHostActivation": { "description": "Equivalent to `EnableCppCLIHostActivation` MSBuild property" },
        "System.Runtime.InteropServices.Marshalling.EnableGeneratedComInterfaceComImportInterop": { "description": "Equivalent to `EnableGeneratedComInterfaceComImportInterop` MSBuild property" },
        "System.Runtime.Serialization.EnableUnsafeBinaryFormatterSerialization": { "description": "Equivalent to `EnableUnsafeBinaryFormatterSerialization` MSBuild property" },
        "System.Runtime.TieredPGO": { "description": "Equivalent to `TieredPGO` MSBuild property" },
        "System.Runtime.Loader.UseRidGraph": { "description": "Equivalent to `UseRidGraph` MSBuild property" },
        "System.StartupHookProvider.IsSupported": { "description": "Equivalent to `StartupHookSupport` MSBuild property" },
        "System.Text.Encoding.EnableUnsafeUTF7Encoding": { "description": "Equivalent to `EnableUnsafeUTF7Encoding` MSBuild property" },
        "System.Text.Json.JsonSerializer.IsReflectionEnabledByDefault": { "description": "Equivalent to `JsonSerializerIsReflectionEnabledByDefault` MSBuild property" },
        "System.Threading.Thread.EnableAutoreleasePool": { "description": "Equivalent to `AutoreleasePoolSupport` MSBuild property" },
        "System.Xml.XmlResolver.IsNetworkingEnabledByDefault": { "description": "Equivalent to `XmlResolverIsNetworkingEnabledByDefault` MSBuild property" }
      }
    },
    // based on https://github.com/dotnet/docs/blob/main/includes/roll-forward-table.md
    "rollForwardPolicy": {
      "allowUnknownValues": false,
      "values": {
        "Minor": "Roll-forward to the lowest higher minor version, if requested minor version is missing. If the requested minor version is present, then the LatestPatch policy is used. This value is the default.",
        "Major": "Roll-forward to the next available higher major version, and lowest minor version, if requested major version is missing. If the requested major version is present, then the Minor policy is used.",
        "LatestPatch": "Roll-forward to the highest patch version. This value disables minor version roll-forward.",
        "LatestMinor": "Roll-forward to highest minor version, even if requested minor version is present.",
        "LatestMajor": "Roll-forward to highest major and highest minor version, even if requested major is present.",
        "Disable": "Don't roll-forward, only bind to the specified version. This policy isn't recommended for general use since it disables the ability to roll-forward to the latest patches. This value is only recommended for testing."
      }
    }
  }
}