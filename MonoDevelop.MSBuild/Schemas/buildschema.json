{
  "$id": "https://github.com/mhutch/MonoDevelop.MSBuildEditor",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "description": "Describes the MSBuild schema format",
  "type": "object",
  "properties": {
    "$schema": { "type": "string" },
    "license": { "type": "string" },
    "items": {
      "type": "object",
      "patternProperties": {
        "^([A-Za-z_][A-Za-z\\d_-]*)$": { "$ref": "#/definitions/item" }
      },
      "additionalProperties": false
    },
    "properties": {
      "type": "object",
      "patternProperties": {
        "^([A-Za-z_][A-Za-z\\d_-]*)$": { "$ref": "#/definitions/property" }
      },
      "additionalProperties": false
    },
    "targets": {
      "type": "object",
      "patternProperties": {
        "^([A-Za-z_][A-Za-z\\d_-]*)$": { "$ref": "#/definitions/target" }
      },
      "additionalProperties": false
    },
    "intellisenseImports": {
      "type": "array",
      "items": { "type": "string" },
      "description": "Additional files to be imported at development time for IntelliSense"
    },
    "types": {
      "type": "object",
      "additionalProperties": { "$ref": "#/definitions/valueType" },
      "description": "Custom type definitions"
    },
    "metadata": {
      "type": "array",
      "items": { "$ref": "#/definitions/metadataOverride" },
      "description": "Apply metadata to existing item types"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "property": {
      "description": "Defines a property",
      "oneOf": [
        {
          "description": "Description of the property",
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Description of the property."
            },
            "type": { "$ref": "#/definitions/valueType" },
            "defaultValue": {
              "type": "string",
              "description": "The default value of the property."
            },
            "values": { "$ref": "#/definitions/valueList" },
            "isList": { "$ref": "#/definitions/valueIsList" },
            "listSeparators": { "$ref": "#/definitions/valueListSeparators" },
            "isLiteral": {
              "description": "Permit only literal values (i.e. no expressions). Defaults to false.",
              "type": "boolean",
              "default": false
            },
            "deprecationMessage": {
              "type": "string",
              "description": "Indicates that the property is deprecated and explains why."
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "item": {
      "description": "Defines an item",
      "oneOf": [
        {
          "description": "Description of the item",
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Description of the item."
            },
            "includeDescription": {
              "type": "string",
              "description": "Describes the item values listed in the Include attribute e.g. 'source files'."
            },
            "type": { "$ref": "#/definitions/valueType" },
            "metadata": {
              "type": "object",
              "patternProperties": {
                "^([A-Za-z_][A-Za-z\\d_-]*)$": { "$ref": "#/definitions/metadata" }
              },
              "additionalProperties": false
            },
            "packageType": {
              "description": "Only applies to items of type `nuget-id`. Restricts the package type."
            },
            "isSingleton": {
              "description": "Specifies that there may only be a single item of this type. This behavior is rare and unidiomatic.",
              "type": "boolean",
              "default": false
            },
            "deprecationMessage": {
              "type": "string",
              "description": "Indicates that the item is deprecated and explains why."
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "metadata": {
      "description": "Defines a metadata value",
      "oneOf": [
        {
          "description": "Description of the metadata",
          "type": "string"
        },
        {
          "type": "object",
          "properties": {
            "description": { "type": "string" },
            "includeDescription": { "type": "string" },
            "type": { "$ref": "#/definitions/valueType" },
            "defaultValue": {
              "type": "string",
              "description": "The default value of the metadata."
            },
            "values": { "$ref": "#/definitions/valueList" },
            "isList": { "$ref": "#/definitions/valueIsList" },
            "listSeparators": { "$ref": "#/definitions/valueListSeparators" },
            "isRequired": {
              "description": "Whether this metadata is required on items of this type",
              "type": "boolean"
            },
            "deprecationMessage": {
              "type": "string",
              "description": "Indicates that the metadata is deprecated and explains why."
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "target": {
      "oneOf": [
        {
          "type": "string",
          "description": "Description of the target"
        },
        {
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "description": "Description of the target"
            },
            "deprecationMessage": {
              "type": "string",
              "description": "Indicates that the target is deprecated and explains why."
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "metadataOverride": {
      "type": "object",
      "properties": {
        "$appliesTo": {
          "description": "Item type or array of item types to which to apply this metadata",
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^([A-Za-z_][A-Za-z\\d_-]*)$"
              }
            },
            {
              "type": "string",
              "pattern": "^([A-Za-z_][A-Za-z\\d_-]*)$"
            }
          ]
        }
      },
      "patternProperties": {
        "^([A-Za-z_][A-Za-z\\d_-]*)$": { "$ref": "#/definitions/metadata" }
      },
      "additionalProperties": false
    },
    "valueList": {
      "description": "A list of valid values",
      "oneOf": [
        {
          "type": "string",
          "description": "Reference to another value list"
        },
        {
          "type": "array",
          "description": "Array of valid values"
        },
        {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "description": "Description for the value"
          }
        }
      ]
    },
    "valueIsList": {
      "description": "Whether the value permits lists. The default semicolon separator can be overridden with \"listSeparators\" property.",
      "type": "boolean",
      "default": false
    },
    "valueListSeparators": {
      "description": "Overrides the list separator characters for this value. Defaults to \";\"",
      "type": "string",
      "enum": [ ";", ",", ";," ],
      "default": ";"
    },
    "valueType" : {
      "description": "The type of the value",
      "oneOf": [
        { "$ref": "#/definitions/valueTypeRef" },
        { "$ref": "#/definitions/valueTypeIntrinsic" },
        { "$ref": "#/definitions/valueTypeCustomMinimal" },
        { "$ref": "#/definitions/valueTypeCustom" }
      ]
    },
    "valueTypeDefinition" : {
      "oneOf": [
        { "$ref": "#/definitions/valueTypeCustomMinimal" },
        { "$ref": "#/definitions/valueTypeCustom" }
      ]
    },
    "valueTypeCustomMinimal": {
      "type": "array",
      "items": { "type": "string" }
    },
    "valueTypeRef": {
      "type": "object",
      "properties": {
        "$ref": {
          "description": "JSON pointer to an existing type definition",
          "type": "string",
          "format": "json-pointer"
        }
      },
      "additionalProperties": false
    },
    "valueTypeCustom": {
      "type": "object",
      "required": [ "values" ],
      "properties": {
        "name": {
          "description": "Overrides the name displayed in the UI",
          "type": "string",
          "pattern": "^([a-z][a-z\\d-]*)$"
        },
        "description": {
          "description": "Description of the type",
          "type": "string"
        },
        "values": {
          "description": "The values this type can have",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "description": "Description of the value"
          }
        },
        "allowUnknownValues": {
          "description": "Whether to allow unknown values",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "valueTypeIntrinsic": {
      "type": "string",
      "enum": [
        "data",
        "bool",
        "int",
        "string",
        "guid",
        "url",
        "version",
        "suffixed-version",
        "lcid",
        "culture",
        "target-name",
        "item-name",
        "property-name",
        "sdk",
        "sdk-version",
        "label",
        "importance",
        "runtime-id",
        "target-framework",
        "target-framework-version",
        "target-framework-identifier",
        "target-framework-profile",
        "target-framework-moniker",
        "nuget-id",
        "nuget-version",
        "project-file",
        "file",
        "folder",
        "folder-with-slash",
        "file-or-folder",
        "extension",
        "configuration",
        "platform",
        "project-kind-guid"
      ]
    }
  }
}